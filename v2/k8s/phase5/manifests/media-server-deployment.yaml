apiVersion: v1
kind: Service
metadata:
  name: media-server
  namespace: voice-agent-phase5
  labels:
    app: media-server
    component: webrtc
    phase: "5"
    version: "5.0.0"
spec:
  type: LoadBalancer
  selector:
    app: media-server
    component: webrtc
  ports:
    - port: 80
      targetPort: 8080
      name: http
    - port: 443
      targetPort: 8080
      name: https
    - port: 8001
      targetPort: 8001
      name: webrtc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-server
  namespace: voice-agent-phase5
  labels:
    app: media-server
    component: webrtc
    phase: "5"
    version: "5.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: media-server
      component: webrtc
  template:
    metadata:
      labels:
        app: media-server
        component: webrtc
        phase: "5"
        version: "5.0.0"
    spec:
      containers:
        - name: media-server
          image: asia-south1-docker.pkg.dev/speechtotext-466820/voice-agent-repo/media-server:v1.0.29
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8001
              name: webrtc
          env:
            - name: SERVER_ADDRESS
              value: ":8001"
            - name: REDPANDA_HOST
              value: "redpanda.voice-agent-phase5.svc.cluster.local"
            - name: REDPANDA_PORT
              value: "9092"
            - name: KAFKA_BROKERS
              value: "redpanda.voice-agent-phase5.svc.cluster.local:9092"
            - name: ORCHESTRATOR_HOST
              value: "orchestrator.voice-agent-phase5.svc.cluster.local"
            - name: ORCHESTRATOR_PORT
              value: "8001"
          # Optimized for free tier
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL 